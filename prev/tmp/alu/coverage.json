["from coverage import *\n\nact = coverpoint('ACT')\ntransition_rising = sequence(act, [0, 1])\ntransition_falling = sequence(act, [1, 0])\n", "from coverage import *\n\nrst = coverpoint('RST')\nrst_trans_1_to_0 = sequence(rst, [1, 0], at_least=5)\nrst_trans_0_to_1 = sequence(rst, [0, 1], at_least=5)\n", "from coverage import *\n\nact = coverpoint('ACT')\nmax_act = 2 ** port_width('ACT') - 1\nact_bins = normal_bins(act, (0, max_act))\n\nrst = coverpoint('RST')\nmax_rst = 2 ** port_width('RST') - 1\nrst_bins = normal_bins(rst, (0, max_rst))\n\nact_rst_cross = cross([act_bins, rst_bins])\n", "from coverage import *\n\nact = coverpoint('ACT')\nact_bin = normal_bin(act, 1)\n\nop = coverpoint('OP')\nmax_op = 2 ** port_width('OP') - 1\nop_bins = normal_bins(op, (0, max_op))\n\nact_op_cross = cross([[act_bin], op_bins])\n", "from coverage import *\n\nop = coverpoint('OP')\nmax_op = 2 ** port_width('OP') - 1\nop_bins = normal_bins(op, (0, max_op))\n\nmov = coverpoint('MOV')\nmov_bin_0 = normal_bin(mov, 0)\nmov_bin_1 = normal_bin(mov, 1)\nmov_bin_2 = normal_bin(mov, 2)\n\nop_mov_cross = cross([op_bins, [mov_bin_0, mov_bin_1, mov_bin_2]])\n", "from coverage import *\n\nreg_a = coverpoint('REG_A')\nwidth = port_width('REG_A')\nmax_val = 2 ** width - 1\n\nbin_0 = normal_bin(reg_a, 0)\nbins_1_to_5 = normal_bins(reg_a, (1, 5))\nbin_max = normal_bin(reg_a, max_val)\nbins_last_range = normal_bins(reg_a, (max_val - 5, max_val))\n", "from coverage import *\n\nreg_b = coverpoint('REG_B')\nmax_reg_b = 2 ** port_width('REG_B') - 1\n\nzero_bin = normal_bin(reg_b, 0)\nsingle_value_1_to_5 = normal_bin(reg_b, (1, 5))\nmax_value_bin = normal_bin(reg_b, max_reg_b)\nrange_max_minus_5_to_max = normal_bin(reg_b, (max_reg_b - 5, max_reg_b))\n", "from coverage import *\n\nmem = coverpoint('MEM')\nmax_mem = 2 ** port_width('MEM') - 1\n\nzero_bin = normal_bin(mem, 0)\nlow_range_bins = normal_bins(mem, (1, 5))\nmax_bin = normal_bin(mem, max_mem)\nhigh_range_bins = normal_bins(mem, (max_mem - 5, max_mem))\n", "from coverage import *\n\nimu = coverpoint('IMM')\nwidth = port_width('IMM')\nmax_val = 2 ** width -1\n\nbin0 = normal_bin(imu, 0)\nbins_1_to_5 = normal_bins(imu, (1,5))\nbin_max = illegal_bin(imu, max_val)\nbins_last_part = normal_bins(imu, (max_val-5, max_val))\n", "None", "None", "from coverage import *\n\nact = coverpoint('ACT')\nmax_act = 2 ** port_width('ACT') - 1\nact_bins = normal_bins(act, (0, max_act))\n\nrdy = coverpoint('RDY')\nmax_rdy = 2 ** port_width('RDY') - 1\nrdy_bins = normal_bins(rdy, (0, max_rdy))\n\ncross_bins = cross([act_bins, rdy_bins])\n", "None", "from coverage import *\n\nreg_a = coverpoint('REG_A')\nreg_b = coverpoint('REG_B')\n\na_small_value_bin = normal_bin(reg_a, 5)\nb_small_value_bin = normal_bin(reg_b, 5)\n\ncross_bins = cross([[a_small_value_bin], [b_small_value_bin]])\n", "from coverage import *\n\ndata = coverpoint('DATA')\nmax_data = 2 ** port_width('DATA') - 1\nmin_bin = normal_bin(data, 0)\nmax_bin = normal_bin(data, (max_data, max_data))\nmin_max_cross = cross([[min_bin], [max_bin]])\n", "from coverage import *\n\ndata = coverpoint('DATA')\nop = coverpoint('OP')\n\n# Get port widths\ndata_width = port_width('DATA')\nmax_data_value = 2 ** data_width - 1\nupper_data_bound = min(max_data_value, 1000)\ndata_bins = normal_bins(data, (0, upper_data_bound))\n\nop_width = port_width('OP')\nmax_op_value = 2 ** op_width - 1\nupper_op_bound = min(max_op_value, 3)  # First four operations are 0-3\nop_bins = normal_bin(op, (0, upper_op_bound))\n\n# Create cross coverage between DATA and OP\ndata_op_cross = cross([data_bins, [op_bins]])\n"]